-- phpMyAdmin SQL Dump
-- version 4.7.7
-- https://www.phpmyadmin.net/
--
-- Хост: 127.0.0.1:3306
-- Время создания: Июл 24 2018 г., 13:50
-- Версия сервера: 5.6.38
-- Версия PHP: 5.5.38

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- База данных: `WD03-project-kovtun`
--

-- --------------------------------------------------------

--
-- Структура таблицы `categories`
--

CREATE TABLE `categories` (
  `id` int(11) UNSIGNED NOT NULL,
  `cat_title` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Дамп данных таблицы `categories`
--

INSERT INTO `categories` (`id`, `cat_title`) VALUES
(1, 'Путешествия'),
(2, 'Покупки'),
(3, 'Технологии'),
(4, 'Заметки'),
(5, 'PHP'),
(6, 'HTML заметки'),
(7, 'Настольные игры');

-- --------------------------------------------------------

--
-- Структура таблицы `comments`
--

CREATE TABLE `comments` (
  `id` int(11) UNSIGNED NOT NULL,
  `post_id` int(11) UNSIGNED DEFAULT NULL,
  `user_id` int(11) UNSIGNED DEFAULT NULL,
  `text` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `date_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Дамп данных таблицы `comments`
--

INSERT INTO `comments` (`id`, `post_id`, `user_id`, `text`, `date_time`) VALUES
(1, 12, 10, 'Привет!', '2018-07-24 10:30:00'),
(2, 12, 10, 'Замечательный парк, обязательно отправлюсь туда этим летом.', '2018-07-24 10:45:48'),
(3, 12, 1, 'Бубубу', '2018-07-24 11:03:38'),
(4, 12, 11, 'Кораблик!', '2018-07-24 11:07:16'),
(5, 12, 2, 'Новый комментарий!', '2018-07-24 11:22:15'),
(6, 10, 2, 'Упс! новый комментарий!', '2018-07-24 11:52:38');

-- --------------------------------------------------------

--
-- Структура таблицы `posts`
--

CREATE TABLE `posts` (
  `id` int(11) UNSIGNED NOT NULL,
  `title` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `text` text COLLATE utf8mb4_unicode_520_ci,
  `author_id` int(11) UNSIGNED DEFAULT NULL,
  `date_time` datetime DEFAULT NULL,
  `post_img` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `post_img_small` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `cat` int(11) UNSIGNED DEFAULT NULL,
  `update_time` datetime DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Дамп данных таблицы `posts`
--

INSERT INTO `posts` (`id`, `title`, `text`, `author_id`, `date_time`, `post_img`, `post_img_small`, `cat`, `update_time`) VALUES
(1, 'Кольцо Эйнштейна &mdash; красивое следствие теории относительности', '<p>На самом деле на этом фото запечатлены сотни и даже тысячи галактик. Перед нами &mdash; редкое и впечатляющее явление, которое называют кольцом Эйнштейна. Оно возникает, когда гравитация массивного тела настолько искривляет вокруг себя пространство-время, что электромагнитное излучение отклоняется от прямых траекторий. Массивный объект, который так сильно влияет на гравитацию, называется гравитационной линзой. На этом снимке, сделанном телескопом Хаббл, роль гравитационной линзы выполняет часть космического кластера SDSS J0146-0929, состоящего из большого скопления галактик. Их изображения можно увидеть по краям этой изящной и редкой гравитационной линзы.</p>\r\n', 1, '2018-07-19 15:48:33', '1313643472.jpg', '320-1313643472.jpg', 5, '2018-07-21 21:22:24'),
(2, 'Сколько энергии потребляет весь интернет в мире?', '<p>Ещё полвека лет назад для отправки сообщения от одного человека другому нужно было проделать множество операций: написать письмо, отнести на почту, где после сортировки его отправят на другую почту и только потом, проделав еще несколько операций, доставят адресату. Все это требовало больших затрат энергии и занимало долгое время.</p>\r\n\r\n<p>Сейчас при помощи интернета сообщение из одной точки земного шара в другую можно отправить за несколько секунд. Но сколько это занимает энергии? Мы привыкли, что интернет существует всегда, и даже не задумываемся, что для его поддержания требуется огромное количество ресурсов. Не было бы экономнее по старинке отправлять письма почтой?</p>\r\n\r\n<p>Чтобы посчитать, сколько энергии потребляет такая система, как интернет, нужно учесть каждый её компонент &ndash; все те миллионы серверов и компьютеров, которые хранят и обрабатывают находящуюся в интернете информацию, элементы их охлаждения, обслуживания, а так же все те девайсы, при помощи которых люди просматривают веб-странички. Мало кто возьмется за такую работу, но в 2011 году энтузиасты Барат Рагаван и Джастин Ма решили попробовать получить хотя бы приблизительное конечное число энергии, которое расходует весь мировой интернет. Причем в своих расчетах они учитывали не только энергию, которая расходуется непосредственно на работу дата-центров, систем охлаждения и принимающих устройств, но и ту часть, которая идёт на производство самих компьютеров, прокладку кабелей и т.д.</p>\r\n\r\n<p>Получилось, что весь мировой интернет расходует от 84 до 143 ГВт электроэнергии в год. Точные данные невозможно установить, т.к. сервера и компьютеры могут работать с различной нагрузкой. Если добавить сюда ежегодные расходы электроэнергии на производство вычислительной техники, необходимой для работы и потребления интернета, получается число от 170 до 307 ГВт, что составляет менее 2% от мирового годового потребления электроэнергии. Не так много, как казалось. А между тем, интернет действительно делает нашу жизнь намного удобнее.</p>\r\n\r\n<p>К сожалению, данные результаты актуальны для конца 2011 года &mdash; начала 2012 года. Более поздних исследований на данную тематику не проводилось. Но есть данные, говорящие о том, что с 2011 по 2016 год общемировое энергопотребление выросло в 1,1 раз. Если умножить полученные Баратом Рагаваном и Джастином Ма данные на этот коэффициент, то мы получим более приближенные к реальности нашего времени числа энергопотребления интернета &mdash; 187 &mdash; 338 ГВт .</p>\r\n', 1, '2018-07-19 15:52:51', '1053360562.jpg', '320-1053360562.jpg', 3, '2018-07-21 21:39:38'),
(3, 'SpaceX успешно запустила самую мощную модификацию ракеты Falcon 9', '<p>Если NASA выдаст разрешение, её смогут использовать для пилотируемых полётов к МКС. Компания SpaceX впервые запустила модификацию ракеты Falcon 9 Block 5. Её отличие &mdash; в более мощных двигателях, а также в более продвинутой адаптации для многократного использования с целью удешевить запуски.</p>\r\n\r\n<p>По словам представителей компании, первая ступень ракеты рассчитана на десять полётов с минимальным техническим обслуживанием между ними. Она успешно села на платформу в Атлантическом океане. Модификация Block 5 соответствует стандартам программы NASA по использованию частных космических кораблей для доставки астронавтов на МКС. Чтобы получить сертификат на пилотируемые миссии, SpaceX предстоит совершить ещё семь успешных полётов.</p>\r\n\r\n<p>Ракета вывела на орбиту бангладешский спутник, который поможет снабдить регион связью, ТВ-сигналом и интернет-доступом. После обновления Block 5 инженеры компании сосредоточатся на разработке сверхтяжёлой многоразовой ракеты BFR, способной вывести на орбиту 150 тонн груза. Её планируют использовать для полётов на Луну и Марс, включая пилотируемые.</p>\r\n', 1, '2018-07-19 16:15:54', '1383647925.jpg', '320-1383647925.jpg', 3, '2018-07-21 21:38:18'),
(6, '&laquo;Сбербанк&raquo; разработал систему оценки недвижимости с помощью нейросети', '<p>&laquo;Сбербанк&raquo; разработал сервис для оценки недвижимости на основе машинного обучения, сообщает &laquo;Коммерсантъ&raquo;.</p>\r\n\r\n<blockquote>\r\n<p>Он позволит ускорить оценку залогов, заявил руководитель блока &laquo;Корпоративный бизнес&raquo; в &laquo;Сбербанке&raquo; .</p>\r\n\r\n<p>Анатолий Попов</p>\r\n</blockquote>\r\n\r\n<p>По его словам, сейчас объекты недвижимости, предлагаемые в залог заёмщиками, оценивает налоговая служба банка, в которой работает несколько сотен экспертов. Процесс проверки отчётов внешних оценщиков или проведение собственных расчётов предполагают значительный объём ручного труда и заново повторяемых механических процедур.</p>\r\n\r\n<blockquote>\r\n<p>С помощи нейросети мы избавляем специалистов от рутинной работы и начинаем максимально использовать их профессиональную экспертизу и знание особенностей локальных рынков, применяя их для анализа результата, полученного искусственным интеллектом.</p>\r\n\r\n<p>Анатолий Попов руководитель блока &laquo;Корпоративный бизнес&raquo; &laquo;Сбербанка&raquo;</p>\r\n</blockquote>\r\n\r\n<p>Сейчас новый сервис работает с базой данных по стрит-ритейлу, которая содержит основные характеристики объектов, их фотографии и цены. Нейросеть получает характеристики интересующего объекта и подбирает наиболее близкие аналоги с учётом местоположения, пешеходного трафика и ценового зонирования. Эту информацию алгоритм использует для расчёта стоимости объекта. По оценкам опрошенных &laquo;Коммерсантом&raquo; участников рынка, стоимость внедрения такой технологии может составлять до 100 млн рублей. Использование нейросети позволит сократить затраты примерно на 30%, а при достижении порогового значения точности экономия может достичь 50%, считают эксперты.</p>\r\n\r\n<div style=\"background:initial !important; border:initial !important; padding:initial !important\">\r\n<div>&nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n\r\n<div>&nbsp;</div>\r\n</div>\r\n', 1, '2018-07-19 16:24:53', NULL, NULL, 4, '2018-07-21 21:43:25'),
(7, 'TARDIS &mdash; Time And Relative Dimension(s) In Space', '<p><strong>ТАРДИС</strong> (англ. <em>TARDIS &mdash; Time And Relative Dimension(s) In Space</em>) &mdash; машина времени и космический корабль из британского телесериала &laquo;Доктор Кто&raquo;, которая, будучи живым существом, росла на родной планете повелителей времени, Галлифрей, до её перемещения в параллельную Вселенную в Войне Времени.</p>\r\n\r\n<p>ТАРДИС может доставить своих пассажиров в любую точку времени и пространства. Она могла принимать любую форму для мимикрии, но однажды этот механизм был сломан, и теперь ТАРДИС Доктора всегда снаружи выглядит, как полицейская будка образца 1963 года, но внутри она гораздо больше, чем снаружи. ТАРДИС выращивают, а не производят. Они берут энергию из нескольких источников, но в первую очередь из ядра искусственной чёрной дыры, Глаза Гармонии, созданного легендарным Повелителем Времени Омегой. По словам Доктора, она застыла во времени.</p>\r\n\r\n<p>Источник силы ТАРДИС (&laquo;сердце ТАРДИС&raquo;) находится под консолью, под центральной колонной, подъём и опускание которой показывает, что машина функционирует. Другие элементы, необходимые для работы ТАРДИС &mdash; редкая руда &laquo;Зейтон-7&raquo; и &laquo;артронная энергия&raquo;. Последняя представляет собой форму темпоральной энергии, открытие Повелителей. До того, как ТАРДИС начнет полностью функционировать, нужно соединить её с биологией Повелителя Времени с помощью устройства Рассилона, дающего симбиотическую связь с ТАРДИС и возможность противостоять физическому стрессу при путешествиях во времени. Без этого приспособления последует молекулярная дезинтеграция. Это служит гарантией отсутствия злоупотреблений при путешествиях во времени, даже если технология ТАРДИС будет скопирована.</p>\r\n\r\n<p>В серии &laquo;Конец путешествия&raquo; Доктор рассказывает: управление рассчитано на шестерых пилотов, а ему приходится справляться одному. ТАРДИС Доктора при перемещениях сильно сотрясается, однако в серии &laquo;Время ангелов&raquo; Ривер Сонг управляет ею плавно, пользуясь стабилизаторами (Доктор называет их &laquo;скукозаторами&raquo;, англ. boringers). К тому же Ривер совершает посадку совершенно беззвучно, объяснив, что Доктор забывает отжимать стояночный тормоз. В ответ Доктор заявляет, что ему просто нравится звук. Это не объясняет тот факт, что ТАРДИС Мастера издаёт такие же точно звуки, хотя он управляет ею гораздо более искусно, чем Доктор. Ривер также сообщает, что её обучал самый лучший учитель. Мы видим в серии &laquo;Давай убьём Гитлера&raquo;, как её обучает интерфейс ТАРДИС, который, также, до этого общался с умирающим Доктором.</p>\r\n', 1, '2018-07-19 17:15:45', '1050532352.jpg', '320-1050532352.jpg', 3, '2018-07-21 21:27:54'),
(8, 'Vampire: The Masquerade', '<p>Как и другие ролевые игры подобного типа, <em>Vampire: The Masquerade</em> основан на книгах правил, описывающих основные элементы вымышленного мира и содержащих рекомендации по организации отыгрыша.</p>\r\n\r\n<p>Создание персонажа игроком проходит в несколько этапов. Сначала разрабатывается его общая концепция (определяется клан, выбираются &laquo;Натура&raquo; &mdash; истинная внутренняя сущность персонажа &mdash; и &laquo;Маска&raquo;, то есть его роль, которую воспринимают окружающие). Затем игрок переходит к вычислению &laquo;атрибутов&raquo; &mdash; характеристик, непосредственно влияющих на возможности персонажа, которые подразделяются на физические, социальные и умственные; после этого выбираются дополнительные способности и особые преимущества, а на заключительным этапе накладываются &laquo;последние штрихи&raquo;, позволяющие сделать вымышленный образ по-настоящему уникальным.</p>\r\n\r\n<p>Процесс создания персонажей обязательно контролируется игровым мастером (рассказчиком); последний также имеет право определять, каким образом будут использоваться те или иные правила в каждой конкретной партии. Время игры ничем не ограничено, поскольку не существует ни заранее написанного сценария, ни каких-либо правил, искусственно ограничивающих продолжительность партий.</p>\r\n\r\n<p>Единственным условием, при котором персонаж более не может использоваться, является его гибель; её возможность присутствует всегда, поэтому игрокам приходится проявлять находчивость и осмотрительность. Игроки, чьи персонажи успешно пережили одну игру (&laquo;хронику&raquo;), могут переносить их в последующие, развивая и переосмысляя их характеры. Драматическая составляющая регулируется рассказчиком и книгами правил. Мастер имеет право решать все вопросы, связанные с взаимодействием персонажей, в том числе следить за тем, как игроки действуют, описывая конфликтные ситуации.</p>\r\n\r\n<p>В случаях, когда требуется определить успешность или неудачу того или иного действия, а также при описании боевых сцен могут использоваться различные приёмы вычисления случайностей (например, система жестов или набор карточек), однако чаще всего применяется бросание десятигранных игральных костей. Количество костей при броске определяется уровнем развития определённых атрибутов и способностей персонажа, сложность броска (числовой показатель, который необходимо превысить, чтобы условное действие было признано успешным) выбирает рассказчик.</p>\r\n\r\n<p>В версии Vampire: The Masquerade, ориентированной на живое действие, объективно существующие правила часто выучиваются участниками непосредственно в процессе игры. Помимо персонажей, создающихся игроками и рассказчиком, в партии могут включаться &laquo;официальные&raquo; персонажи, биографии и характеристики которых содержатся в книгах правил. Такие действующие лица могут выполнять роль могущественных антагонистов, контролировать действия игроков (например, давать их персонажам задания) или просто использоваться для придания истории колорита. Некоторым из этих персонажей (например, учёному Беккету или бойцу Бруха Тео Беллу) посвящены отдельные книги, другие получили широкую известность за счёт связанной с сеттингом продукции (как Джулиан Луна, один из главных героев телесериала &laquo;Клан&raquo;).</p>\r\n', 1, '2018-07-21 16:05:23', '1307098544.jpg', '320-1307098544.jpg', 7, '2018-07-21 21:25:47'),
(9, 'Подземелья и драконы', '<p><strong>Dungeons &amp; Dragons (D&amp;D, DnD; Подземелья и драконы)</strong> &mdash; настольная ролевая игра в жанре фэнтези, разработанная Гэри Гайгэксом и Дэйвом Арнесоном. Впервые была издана в 1974 году компанией &laquo;Tactical Studies Rules, Inc.&raquo; (TSR). С 1997 года издаётся компанией &laquo;Wizards of the Coast&raquo; (WotC).</p>\r\n\r\n<p>В игре участвуют ведущий (так называемый &laquo;мастер&raquo;) и несколько игроков, число которых варьируется в зависимости от редакции и пожеланий участников. Обычно один игрок руководит в игровом мире действиями одного персонажа. Мастер действует от лица всех неигровых персонажей, описывает окружающую среду и происходящие в ней события.</p>\r\n\r\n<p>В течение игры каждый игрок задаёт действия для своего персонажа, а результаты действий определяются мастером в соответствии с правилами. Случайные события моделируются броском кубика. Иногда решения мастера могут не соответствовать правилам. Это является Золотым правилом игры: &laquo;ДМ всегда прав&raquo;, так называемым &laquo;мастерским произволом&raquo;.</p>\r\n\r\n<p>Традиционно руководство игры или свод правил включает в себя три книги: &laquo;Player&rsquo;s Handbook&raquo;, &laquo;Dungeon Master&rsquo;s Guide&raquo; и &laquo;Monster Manual&raquo;. Также существуют различные дополнения, которые мастер может использовать по своему усмотрению. Иногда для игры используются различные карты, чтобы визуально изобразить ситуации в игре, также могут использоваться фигурки персонажей и их противников. Но основным, а иногда и единственным требованием для игры является наличие листов персонажей и набора кубиков &mdash; дайсов &mdash; игральных костей с заданным числом сторон (d4, d6, d8, d10, d12, d20).</p>\r\n', 1, '2018-07-21 18:25:04', '1343402247.jpg', '320-1343402247.jpg', 7, '2018-07-21 21:23:41'),
(10, 'Несколько других советов для PHP-разработчиков', '<p>Я решил вспомнить некоторые особенности PHP, связанные с производительностью.<br />\r\n<br />\r\nОтмечу, что включил в свой небольшой список лишь то, что обычно вызывает удивление у junior developers, с которыми мне приходилось работать.<br />\r\nО банальных вещах, вроде &laquo;одинарные кавычки вместо двойных&raquo;, думаю, знают все, поэтому постараюсь кого-нибудь удивить.<br />\r\n<br />\r\nРезультаты и выводы, сделаны на основании нескольких версий PHP, который крутятся на знакомых мне серверах, а именно 5.2.6 из Debian Lenny, 5.3.2 из Ubuntu, и 5.2.14 из dotdeb. Возможно, на других платформах, есть отличия.</p>\r\n\r\n<ul>\r\n	<li><strong>file_get_contents</strong><br />\r\n	Не секрет, что file_get_contents, использует (<a href=\"http://ru.wikipedia.org/wiki/Mmap\">memory mapping</a>), прирост от которого, особенно заметен на крупных файлах.<br />\r\n	Следствие этого:<br />\r\n	<code>simplexml_load_string( file_get_contents (&#39;file.xml&#39;) ) </code><br />\r\n	работает быстрее, чем:<br />\r\n	<code>simplexml_load_file(&#39;file.xml&#39;) </code><br />\r\n	Похоже, что подобные simplexml_load_file функции, базируются на обычных fopen/fread, что приводит к разнице в скорости.<br />\r\n	<br />\r\n	NB: Также неплохо ускоряется DOM-&gt;loadFile, и некоторые другие функции с похожим поведением.<br />\r\n	<br />\r\n	Если вы разбираете файл с \\n разделителями (или к примеру CSV, TSV, или нечто подобное), советую заменить file() на<br />\r\n	<code>explode(PHP_EOL, file_get_contents(&#39;file.xml&#39;));</code><br />\r\n	Спасибо за подсказку c PHP_EOL <a class=\"user_link\" href=\"https://habrahabr.ru/users/lonecat/\">LoneCat</a><br />\r\n	Прирост будет еще больше, чем в случае с xml.<br />\r\n	Видимо, file() &mdash; не очень удачно реализована.</li>\r\n	<li><strong>count() и sizeof()</strong><br />\r\n	UPD: sizeof() это синоним count(), работает быстрее, спасибо <a class=\"user_link\" href=\"https://habrahabr.ru/users/merkushin/\">merkushin</a> за поправку.</li>\r\n	<li><strong>Notices, etc.</strong><br />\r\n	Допускать нотисы, это ужасно, да.<br />\r\n	Но если ваш junior developer, не хочет признавать их важность, расскажите ему, что на генерацию одного notice у PHP уходит время, за которое можно обойти и инкрементировать массив из примерно 30-ти элементов.</li>\r\n	<li><strong>foreach</strong><br />\r\n	Цикл foreach, практически в каждой статье, посвящённой производительности PHP, предают анафеме.<br />\r\n	На практике, не всё так страшно. Жуткие конструкции, вроде:<br />\r\n	<code>while (list($key, $value) = each($item))</code><br />\r\n	в реальных условиях, часто бывают медленнее.<br />\r\n	Если же пропустить $key, то эта конструкция проигрывает foreach примерно 30-40%.</li>\r\n	<li><strong>JSON vs XML</strong><br />\r\n	Скажу лишь, что перейдя на json-файлы для конфигурации, выиграл 20-30% на инициализации ядра. JSON приятен для глаз, иерархичен и быстр.<br />\r\n	Также, json_decode быстрее работает без второго аргумента (генерируя объект, а не массив), но незначительно.</li>\r\n	<li><strong>mb_ereg vs preg_match</strong><br />\r\n	POSIX &mdash; выражения медленные, это опять же, общеизвестно.<br />\r\n	Но движок Oniguruma, который используется в функции mb_ereg, и её mb-собратьях, с этим не согласен, и примерно в двух третях случаев, обгоняет хвалёный preg_match.</li>\r\n	<li><strong>IGBinary для сериализации.</strong><br />\r\n	<a href=\"http://github.com/phadej/igbinary\">Это очень быстрое расширение</a>, с очень компактным значением на выходе.</li>\r\n	<li><strong>file_exists и include</strong><br />\r\n	Проверять file_exists() затем делать include, дешевле, чем проверять возврат include(), если вы, к примеру, не уверены, что файл на месте.</li>\r\n	<li><strong>Опять include </strong><br />\r\n	Не знаю почему, но include_once, часто проигрывает по скорости конструкции с принудительной проверкой (записываем в массив все включённые файлы).</li>\r\n	<li><strong>Static vars</strong><br />\r\n	Статическая переменная класса, самое лучшее место для быстрого получения глобальных данных, замечен прирост в 5 &mdash; 10 раз.</li>\r\n	<li><strong>Напоследок, пара советов</strong><br />\r\n	Показывайте себе время выполнения в миллисекундах, а не в долях секунды.<br />\r\n	Это здорово мотивирует (сравните, &laquo;100 миллисекунд&raquo; и &laquo;0.1 секунды&raquo;), и легче читается.<br />\r\n	Очень важно, собирать информацию, не только об абсолютной скорости, но и анализировать вклад отдельных подсистем: ядра, интерфейса данных, рендеринга, и.т.п.<br />\r\n	Свой профайлер, я настроил (на testing-машине) на выброс исключений, при аномальном замедлении каких-либо участков кода (пример: &laquo;Achtung! 30% времени на подключение к MySQL&raquo;).</li>\r\n</ul>\r\n\r\n<p>Все выводы получены в результате личных наблюдений и тестов.<br />\r\nВполне возможно, что на вашей системе результаты будут иные.<br />\r\n<br />\r\nЗамечу, что многое зависит от вашей архитектуры, и практически любой совет надо проверять на своём коде, не доверяя полностью чужому опыту.<br />\r\n<br />\r\nПоэтому я осознанно не указывал абсолютных цифр, которые вы можете найти и сами, к примеру на <a href=\"http://phpbench.com/\">http://phpbench.com/</a> (не моё)<br />\r\n<br />\r\nУдачи и быстрого кода!</p>\r\n\r\n<p><a href=\"https://habr.com/post/102598/\">Источник</a></p>\r\n', 1, '2018-07-21 22:09:50', '1378842471.jpg', '320-1378842471.jpg', 5, '2018-07-22 15:15:32'),
(12, 'укпупуапва', '<p>укфупфап пфвавап</p>\r\n', 1, '2018-07-22 13:41:56', '1379543266.jpg', '320-1379543266.jpg', 1, NULL);

-- --------------------------------------------------------

--
-- Структура таблицы `users`
--

CREATE TABLE `users` (
  `id` int(11) UNSIGNED NOT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `password` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `role` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `firstname` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `lastname` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `country` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `city` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `avatar` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `avatar_small` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `recovery_code` varchar(191) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `recovery_code_times` double DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;

--
-- Дамп данных таблицы `users`
--

INSERT INTO `users` (`id`, `email`, `password`, `role`, `firstname`, `lastname`, `country`, `city`, `avatar`, `avatar_small`, `recovery_code`, `recovery_code_times`) VALUES
(1, 'info@mail.com', '$2y$10$A3zMFjW1M95VhGDXOZ36BOp8MYruymgcVj29RS1Xg8SOu1ihYvd4S', 'admin', 'Мила', 'Ковтун', 'Россия', 'Воронеж', '1226356906.jpg', '48-1226356906.jpg', 'cyLIPiBM6s49ntZ', 0),
(2, 'user@mail.com', '$2y$10$Yj6hddriRZjmGv6EL63Nl.TgpwRpfdjoDDNr/RwqtGr/VsUgL.TF.', 'user', 'Емельян', 'Казаков', '', 'Рязань', '1229698198.jpg', '48-1229698198.jpg', 'KytPYfXnxEhgqBa', 0),
(10, 'user2@mail.com', '$2y$10$0110snDgMedFH1spjjI18ebq9FeN6IAUVjovs85wRINO.EL5n7WHC', 'user', 'Василий', 'Давыдов', 'Украина', 'Киев', '1193344438.jpg', '48-1193344438.jpg', NULL, NULL),
(11, 'user3@mail.com', '$2y$10$g1fiknActb/CUk9bXYOBuOxFk/n3REgCDxOz3HGlMpsCfTm6FuiH6', 'user', NULL, NULL, NULL, NULL, NULL, NULL, NULL, NULL);

--
-- Индексы сохранённых таблиц
--

--
-- Индексы таблицы `categories`
--
ALTER TABLE `categories`
  ADD PRIMARY KEY (`id`);

--
-- Индексы таблицы `comments`
--
ALTER TABLE `comments`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index_foreignkey_comments_post` (`post_id`),
  ADD KEY `index_foreignkey_comments_user` (`user_id`);

--
-- Индексы таблицы `posts`
--
ALTER TABLE `posts`
  ADD PRIMARY KEY (`id`),
  ADD KEY `index_foreignkey_posts_author` (`author_id`);

--
-- Индексы таблицы `users`
--
ALTER TABLE `users`
  ADD PRIMARY KEY (`id`);

--
-- AUTO_INCREMENT для сохранённых таблиц
--

--
-- AUTO_INCREMENT для таблицы `categories`
--
ALTER TABLE `categories`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=8;

--
-- AUTO_INCREMENT для таблицы `comments`
--
ALTER TABLE `comments`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=7;

--
-- AUTO_INCREMENT для таблицы `posts`
--
ALTER TABLE `posts`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=13;

--
-- AUTO_INCREMENT для таблицы `users`
--
ALTER TABLE `users`
  MODIFY `id` int(11) UNSIGNED NOT NULL AUTO_INCREMENT, AUTO_INCREMENT=12;
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
